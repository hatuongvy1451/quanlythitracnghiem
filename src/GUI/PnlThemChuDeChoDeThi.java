/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.BaiThiBUS;
import BUS.CauHoiBUS;
import BUS.ChuDeBUS;
import BUS.DeThiBUS;
import DTO.BaiThiDTO;
import DTO.ChuDeDTO;
import DTO.DeThiDTO;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Thu Huyền
 */
public class PnlThemChuDeChoDeThi extends javax.swing.JPanel {

    ChuDeBUS cdBUS = new ChuDeBUS();
    BaiThiBUS btBUS = new BaiThiBUS();
    DeThiBUS dtBUS = new DeThiBUS();
    CauHoiBUS chBUS = new CauHoiBUS();

    /**
     * Creates new form PnlThemDeThi
     */
    public PnlThemChuDeChoDeThi() {
        initComponents();
        txtMaDeThi.setEnabled(false);
        loadCmbChuDe();
    }

    public void setThongTinDeThi(DeThiDTO deThi) {
        txtMaDeThi.setText(deThi.getTestCode());
        String testCode = txtMaDeThi.getText();
        txtSoCauDe.setText(String.valueOf(deThi.getNum_easy()));
        txtSoCauTrungBinh.setText(String.valueOf(deThi.getNum_medium()));
        txtSoCauKho.setText(String.valueOf(deThi.getNum_diff()));
        tinhTong();
        txtTieuDe.setText(deThi.getTestTitle());
        txtThoiGian.setText(String.valueOf(deThi.getTestTime()));
        txtSoGioiHan.setText(String.valueOf(deThi.getTestLimit()));
        int sobienthe = dtBUS.getListexOrders(testCode);
        txtSoBienThe.setText(String.valueOf(sobienthe));

    }

    public void loadCmbChuDe() {
        cdBUS.doclistchude();
        cmbChuDe.removeAllItems();
        ArrayList<ChuDeDTO> dscd = new ArrayList<>();
        dscd = cdBUS.getListChuDe();
        cmbChuDe.addItem("0 - Chọn chủ đề");
        for (ChuDeDTO cd : dscd) {
            cmbChuDe.addItem(cd.getTpID() + " - " + cd.getTpTitle());
        }
    }

    public void tinhTong() {
        try {
            int a = txtSoCauDe.getText().trim().isEmpty() ? 0 : Integer.parseInt(txtSoCauDe.getText().trim());
            int b = txtSoCauTrungBinh.getText().trim().isEmpty() ? 0 : Integer.parseInt(txtSoCauTrungBinh.getText().trim());
            int c = txtSoCauKho.getText().trim().isEmpty() ? 0 : Integer.parseInt(txtSoCauKho.getText().trim());

            txtTongSoCau.setText(String.valueOf(a + b + c));
        } catch (NumberFormatException e) {
            txtTongSoCau.setText("Lỗi!"); // Nếu nhập sai định dạng, hiển thị lỗi
        }
    }

    public String tangIdTestCode() {
        String testCode = btBUS.getTestCodeCuoCungTrongBang();
        int id = Integer.parseInt(testCode.substring(4));
        id++;
        String newtestCode = "TEST" + String.format("%03d", id);

        return newtestCode;

    }

    public String tangIdExCode() {
        String exCode = dtBUS.getExCodeTheoTestCodeTrongBang(txtMaDeThi.getText());
        int id = Integer.parseInt(exCode.substring(2));
        id++;
        String newexCode = "EX" + String.format("%03d", id);

        return newexCode;
    }

    public ArrayList<Integer> getCauHoiNgauNhien(ArrayList<Integer> dsch, int slch) {
        ArrayList<Integer> dskq = new ArrayList<>();
        Random rand = new Random();

        if (slch >= dsch.size()) {
            return new ArrayList<>(dsch); // Trả về bản sao của dsch
        }

        ArrayList<Integer> cpList = new ArrayList<>(dsch); // Sao chép danh sách gốc
        while (dskq.size() < slch && !cpList.isEmpty()) {
            int index = rand.nextInt(cpList.size());
            dskq.add(cpList.remove(index)); // Lấy và xóa phần tử ngẫu nhiên
        }

        return dskq;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtMaDeThi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbChuDe = new javax.swing.JComboBox<>();
        txtTieuDe = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSoCauDe = new javax.swing.JTextField();
        txtSoCauTrungBinh = new javax.swing.JTextField();
        txtSoCauKho = new javax.swing.JTextField();
        txtThoiGian = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTongSoCau = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtSoGioiHan = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSoBienThe = new javax.swing.JTextField();
        btnThemDeThi = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblThemND = new javax.swing.JLabel();

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã đề thi:");

        txtMaDeThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Chủ đề: ");

        cmbChuDe.setEditable(true);
        cmbChuDe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbChuDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbChuDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChuDeActionPerformed(evt);
            }
        });

        txtTieuDe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTieuDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTieuDeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tiêu đề: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Số câu khó: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Số câu dễ: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Số câu TB:");

        txtSoCauDe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSoCauDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoCauDeActionPerformed(evt);
            }
        });

        txtSoCauTrungBinh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSoCauTrungBinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoCauTrungBinhActionPerformed(evt);
            }
        });

        txtSoCauKho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSoCauKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoCauKhoActionPerformed(evt);
            }
        });

        txtThoiGian.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtThoiGian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThoiGianActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Thời gian:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Tổng số câu:");

        txtTongSoCau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTongSoCau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongSoCauActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Số giới hạn:");

        txtSoGioiHan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSoGioiHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoGioiHanActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Số biến thể:");

        txtSoBienThe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnThemDeThi.setBackground(new java.awt.Color(0, 153, 153));
        btnThemDeThi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThemDeThi.setForeground(new java.awt.Color(255, 255, 255));
        btnThemDeThi.setText("Thêm mới đề thi");
        btnThemDeThi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDeThiActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        lblThemND.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblThemND.setForeground(java.awt.Color.white);
        lblThemND.setText("THÊM CHỦ ĐỀ CHO ĐỀ THI");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThemND)
                .addGap(211, 211, 211))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThemND)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaDeThi)
                    .addComponent(txtTieuDe)
                    .addComponent(txtThoiGian)
                    .addComponent(cmbChuDe, 0, 214, Short.MAX_VALUE)
                    .addComponent(txtSoGioiHan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoBienThe, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(txtTongSoCau)
                            .addComponent(txtSoCauKho, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSoCauTrungBinh, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(txtSoCauDe))))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemDeThi)
                .addGap(256, 256, 256))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtSoCauDe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtSoCauTrungBinh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbChuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSoCauKho, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTongSoCau, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoGioiHan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(txtSoBienThe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnThemDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTieuDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTieuDeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTieuDeActionPerformed

    private void txtSoCauDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoCauDeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoCauDeActionPerformed

    private void txtSoCauTrungBinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoCauTrungBinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoCauTrungBinhActionPerformed

    private void txtSoCauKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoCauKhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoCauKhoActionPerformed

    private void txtThoiGianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThoiGianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThoiGianActionPerformed

    private void cmbChuDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChuDeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbChuDeActionPerformed

    private void txtSoGioiHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoGioiHanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoGioiHanActionPerformed

    private void txtTongSoCauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongSoCauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongSoCauActionPerformed

    private void btnThemDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDeThiActionPerformed

        String testCode = txtMaDeThi.getText();
        int tpID = cmbChuDe.getSelectedIndex(); // tpID mới từ người dùng chọn
        String testTitle = txtTieuDe.getText();
        int testTime = Integer.parseInt(txtThoiGian.getText());
        int num_easy = Integer.parseInt(txtSoCauDe.getText());
        int num_medium = Integer.parseInt(txtSoCauTrungBinh.getText());
        int num_diff = Integer.parseInt(txtSoCauKho.getText());
        int testLimit = Integer.parseInt(txtSoGioiHan.getText());
        int sobienthe = Integer.parseInt(txtSoBienThe.getText());
        String testDate = LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

        if (tpID == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn chủ đề!");
            return;
        }

        // 1. Lấy danh sách tpID cũ từ bảng test
        ArrayList<String> dsTpIDold = btBUS.getIdTpByTestCode(testCode);

        // Kiểm tra xem tpID mới có trùng với tpID cũ không
        if (dsTpIDold.contains(String.valueOf(tpID))) {
            JOptionPane.showMessageDialog(this, "Chủ đề đã tồn tại!");
            return;
        }

        // 2. Lấy danh sách câu hỏi từ tpID cũ và trộn vào mảng chung
        ArrayList<Integer> tatCaCauDe = new ArrayList<>();
        ArrayList<Integer> tatCaCauTrungBinh = new ArrayList<>();
        ArrayList<Integer> tatCaCauKho = new ArrayList<>();

        for (String tpIDold : dsTpIDold) {
            tatCaCauDe.addAll(chBUS.getCauHoiTheoqTpIDvaqLevel(Integer.parseInt(tpIDold), "dễ"));
            tatCaCauTrungBinh.addAll(chBUS.getCauHoiTheoqTpIDvaqLevel(Integer.parseInt(tpIDold), "trung bình"));
            tatCaCauKho.addAll(chBUS.getCauHoiTheoqTpIDvaqLevel(Integer.parseInt(tpIDold), "khó"));
        }

        // 3. Thêm câu hỏi từ tpID mới vào mảng chung
        tatCaCauDe.addAll(chBUS.getCauHoiTheoqTpIDvaqLevel(tpID, "dễ"));
        tatCaCauTrungBinh.addAll(chBUS.getCauHoiTheoqTpIDvaqLevel(tpID, "trung bình"));
        tatCaCauKho.addAll(chBUS.getCauHoiTheoqTpIDvaqLevel(tpID, "khó"));

        // Kiểm tra số lượng câu hỏi trong mảng chung
        if (tatCaCauDe.size() < num_easy || tatCaCauTrungBinh.size() < num_medium || tatCaCauKho.size() < num_diff) {
            JOptionPane.showMessageDialog(this, "Không đủ câu hỏi từ tất cả chủ đề để cập nhật!");
            return;
        }

        // 4. Cập nhật bảng test
        BaiThiDTO bt = new BaiThiDTO();
        bt.setTestCode(testCode);
        bt.setTestTitle(testTitle);
        bt.setTestTime(testTime);
        bt.setTpID(tpID);
        bt.setNum_easy(num_easy);
        bt.setNum_medium(num_medium);
        bt.setNum_diff(num_diff);
        bt.setTestDate(testDate);
        bt.setTestLimit(testLimit);
        bt.setTestStatus(1);

        boolean flag = btBUS.addBaiThi(bt); // Thêm mới nếu chưa tồn tại
        if (!flag) {
            JOptionPane.showMessageDialog(this, "Cập nhật/thêm bảng test thất bại!");
            return;
        }

        // 5. Cập nhật ex_quesIDs từng dòng trong bảng exams ứng với mỗi excode (chỉ cập nhật, không thêm mới)
        int currentVariants = dtBUS.getListexOrders(testCode); // Số biến thể hiện tại
        if (sobienthe > currentVariants) {
            JOptionPane.showMessageDialog(this, "Số biến thể yêu cầu vượt quá số biến thể hiện có. Chỉ cập nhật các biến thể hiện tại!");
            sobienthe = currentVariants; // Giới hạn số biến thể cần cập nhật
        }

        for (char c = 'A'; c < 'A' + sobienthe; c++) {
            String exOrder = String.valueOf(c);
            String exCode = dtBUS.getExCodeByTestCodeAndOrder(testCode, exOrder); // Lấy exCode hiện có

            if (exCode == null) {
                // Nếu không tìm thấy exCode, bỏ qua biến thể này (không thêm mới)
                continue;
            }

            // Chọn ngẫu nhiên từ mảng chung
            ArrayList<Integer> soCauDe = getCauHoiNgauNhien(tatCaCauDe, num_easy);
            ArrayList<Integer> soCauTrungBinh = getCauHoiNgauNhien(tatCaCauTrungBinh, num_medium);
            ArrayList<Integer> soCauKho = getCauHoiNgauNhien(tatCaCauKho, num_diff);

            // Gộp tất cả câu hỏi
            ArrayList<Integer> tongCacCauHoi = new ArrayList<>();
            tongCacCauHoi.addAll(soCauDe);
            tongCacCauHoi.addAll(soCauTrungBinh);
            tongCacCauHoi.addAll(soCauKho);

            // Chuyển thành mảng String
            String[] cacCauHoi = new String[tongCacCauHoi.size()];
            for (int i = 0; i < tongCacCauHoi.size(); i++) {
                cacCauHoi[i] = String.valueOf(tongCacCauHoi.get(i));
            }
            // Chỉ cập nhật cột ex_quesIDs cho bản ghi hiện có
            boolean flag2 = dtBUS.updateExQuesIDs(testCode, exOrder, cacCauHoi); // Phương thức chỉ cập nhật ex_quesIDs
            if (!flag2) {
                JOptionPane.showMessageDialog(this, "Cập nhật biến thể " + exOrder + " thất bại!");
                return;
            }
        }
        JOptionPane.showMessageDialog(this, "Cập nhật đề thi thành công!");
    }//GEN-LAST:event_btnThemDeThiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThemDeThi;
    private javax.swing.JComboBox<String> cmbChuDe;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblThemND;
    private javax.swing.JTextField txtMaDeThi;
    private javax.swing.JTextField txtSoBienThe;
    private javax.swing.JTextField txtSoCauDe;
    private javax.swing.JTextField txtSoCauKho;
    private javax.swing.JTextField txtSoCauTrungBinh;
    private javax.swing.JTextField txtSoGioiHan;
    private javax.swing.JTextField txtThoiGian;
    private javax.swing.JTextField txtTieuDe;
    private javax.swing.JTextField txtTongSoCau;
    // End of variables declaration//GEN-END:variables
}
